@model eCMS.DataLogic.ViewModels.CaseSummaryVM
@using EasySoft.Helper;
@using eCMS.Shared;
@using eCMS.DataLogic.Models;
@using eCMS.DataLogic.ViewModels;
@{
    Layout = "~/Views/Shared/_LayoutInternal.cshtml";
    ViewBag.Title = "Case Summary";
}
@section headsection
{
    @Styles.Render("~/assets/plugins/kendo/css")
    @Scripts.Render("~/assets/plugins/kendo/js")
}
@Html.HiddenFor(m => m.CaseID)
@Html.HiddenFor(m => m.ProgramID)
@Html.HiddenFor(m => m.CurrentHouseholdIncomeID)
@*<label class="control-label labe-text">Test</label>
    <label class="control-label labe-text">@Html.DisplayFor(model => model.EnrollDate)</label>*@
<div class="container bulk-import">
    <div class="row margin-top-40">
        <div class="align-right">
            @Html.ActionLink("Add Work Note", "Index", "CaseWorkerNote", new { CaseID = Model.CaseID, ProgramID = Model.ProgramID }, null)
            @Html.ActionLink("Add SSS Work Note", "Index", "CaseSSSWorkerNote", new { CaseID = Model.CaseID, ProgramID = Model.ProgramID }, null)
        </div>
        <div class="center-block" style="align-items:center;">
            <table class="table table-striped text-align-center" align="center" style="width:100%;">
                <thead>
                    <tr>
                        <th style="width:30%;"><label class="control-label labe-text">Demographics:</label></th>
                        <th style="width:20%;">&nbsp;</th>
                        <th style="width:50%;">&nbsp;</th>
                    </tr>
                </thead>
                <tr>
                    <td>
                        <label class="control-label labe-text">Program:</label>
                    </td>
                    <td style="vertical-align:central;">
                        @Html.DisplayFor(model => model.Program)
                    </td>
                    <td style="width:50%;">&nbsp;</td>
                </tr>
                <tr>
                    <td>
                        <label class="control-label labe-text">Primary Coordinator:</label>
                    </td>
                    <td>@Html.DisplayFor(model => model.SubProgram)</td>
                    <td style="width:50%;">&nbsp;</td>
                </tr>
                <tr>
                    <td>
                        <label class="control-label labe-text">Region:</label>
                    </td>
                    <td>@Html.DisplayFor(model => model.Region)</td>
                    <td style="width:50%;">&nbsp;</td>
                </tr>
                <tr>
                    <td>
                        <label class="control-label labe-text">Jamatkhana:</label>
                    </td>
                    <td>@Html.DisplayFor(model => model.Jamatkhaana)</td>
                    <td style="width:50%;">&nbsp;</td>
                </tr>
                <tr>
                    <td>
                        <label class="control-label labe-text">Reference Case:</label>
                    </td>
                    <td>@Html.DisplayFor(model => model.ReferenceCase)</td>
                    <td style="width:50%;">&nbsp;</td>
                </tr>
                <tr>
                    <td>
                        <label class="control-label labe-text">Enrollment Date:</label>
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.EnrolmentDate)
                    </td>
                    <td style="width:50%;">&nbsp;</td>
                </tr>
                <tr>
                    <td>
                        <label class="control-label labe-text">Intake Method:</label>
                    </td>
                    <td>@Html.DisplayFor(model => model.IntakeMethod)</td>
                    <td style="width:50%;">&nbsp;</td>
                </tr>
                <tr>
                    <td>
                        <label class="control-label labe-text">Referral Source:</label>
                    </td>
                    <td>@Html.DisplayFor(model => model.ReferralSource)</td>
                    <td style="width:50%;">&nbsp;</td>
                </tr>
                <tr>
                    <td>
                        <label class="control-label labe-text">Referral Date:</label>
                    </td>
                    <td>@Html.DisplayFor(model => model.ReferralDate)</td>
                    <td style="width:50%;">&nbsp;</td>
                </tr>
                <tr>
                    <td>
                        <label class="control-label labe-text">Risk Level:</label>
                    </td>
                    <td>@Html.DisplayFor(model => model.RiskLevel)</td>
                    <td style="width:50%;">&nbsp;</td>
                </tr>
                <tr>
                    <td>
                        <label class="control-label labe-text">Presenting Problem (Reason for seeking support):</label>
                    </td>
                    <td>@Html.DisplayFor(model => model.PresentingProblem)</td>
                    <td style="width:50%;">&nbsp;</td>
                </tr>
                <tr>
                    <td>
                        <label class="control-label labe-text">Address:</label>
                    </td>
                    <td>@Html.DisplayFor(model => model.Address)</td>
                    <td style="width:50%;">&nbsp;</td>
                </tr>
                <tr>
                    <td>
                        <label class="control-label labe-text">City:</label>
                    </td>
                    <td>@Html.DisplayFor(model => model.City)</td>
                    <td style="width:50%;">&nbsp;</td>
                </tr>
                <tr>
                    <td>
                        <label class="control-label labe-text">Postal Code:</label>
                    </td>
                    <td>@Html.DisplayFor(model => model.PostalCode)</td>
                    <td style="width:50%;">&nbsp;</td>
                </tr>
            </table>
            <div class="col-md-12">
                <div class="align-left">
                    <label class="control-label labe-text">household Income:</label>
                    <label style="text-align:right;">
                        @Html.ActionLink("Update Household Income", Constants.Actions.Edit, Constants.Controllers.CaseHouseholdIncome, new { CaseID = Model.CaseID, IncomeID = Model.CurrentHouseholdIncomeID }, null)
                    </label>
                </div>

                <div class="col-md-6 border" style="outline-style: solid;">
                    <table>
                        <thead>
                            <label class="control-label labe-text">Initial household Income:</label>
                        </thead>
                        <tr>
                            <td><label class="control-label labe-text">Number of members in the household:</label></td>
                            <td>@Html.DisplayFor(model => model.CaseInitialHouseholdIncomeVM.NoOfMembers)</td>
                        </tr>
                        <tr>
                            <td><label class="control-label labe-text">Number of children in the household:</label></td>
                            <td>@Html.DisplayFor(model => model.CaseInitialHouseholdIncomeVM.NoOfChild)</td>
                        </tr>
                        <tr>
                            <td><label class="control-label labe-text">Number of seniors (+65) in the household:</label></td>
                            <td>@Html.DisplayFor(model => model.CaseInitialHouseholdIncomeVM.NoOfSeniors)</td>
                        </tr>
                        <tr>
                            <td><label class="control-label labe-text">Number of physically disabled members in the household:</label></td>
                            <td>@Html.DisplayFor(model => model.CaseInitialHouseholdIncomeVM.NoOfPhysicallyDisabled)</td>
                        </tr>
                        <tr>
                            <td><label class="control-label labe-text">Household gross income range (annual):</label></td>
                            <td>@Html.DisplayFor(model => model.CaseInitialHouseholdIncomeVM.IncomeRanges)</td>
                        </tr>
                        <tr>
                            <td><label class="control-label labe-text">Date Entered:</label></td>
                            <td>@Html.DisplayFor(model => model.CaseInitialHouseholdIncomeVM.CreatedDate)</td>
                        </tr>
                        <tr>
                            <td><label class="control-label labe-text">Is LICO:</label></td>
                            <td>@Html.DisplayFor(model => model.CaseInitialHouseholdIncomeVM.IsLICO)</td>
                        </tr>
                    </table>

                </div>

                <div class="col-md-6 border" style="outline-style: solid;">
                    <table>
                        <thead>
                            <label class="control-label labe-text">Current household Income:</label>
                        </thead>
                        <tr>
                            <td><label class="control-label labe-text">Number of members in the household:</label></td>
                            <td>@Html.DisplayFor(model => model.CaseCurrentHouseholdIncomeVM.NoOfMembers)</td>
                        </tr>
                        <tr>
                            <td><label class="control-label labe-text">Number of children in the household:</label></td>
                            <td>@Html.DisplayFor(model => model.CaseCurrentHouseholdIncomeVM.NoOfChild)</td>
                        </tr>
                        <tr>
                            <td><label class="control-label labe-text">Number of seniors (+65) in the household:</label></td>
                            <td>@Html.DisplayFor(model => model.CaseCurrentHouseholdIncomeVM.NoOfSeniors)</td>
                        </tr>
                        <tr>
                            <td><label class="control-label labe-text">Number of physically disabled members in the household:</label></td>
                            <td>@Html.DisplayFor(model => model.CaseCurrentHouseholdIncomeVM.NoOfPhysicallyDisabled)</td>
                        </tr>
                        <tr>
                            <td><label class="control-label labe-text">Household gross income range (annual):</label></td>
                            <td>@Html.DisplayFor(model => model.CaseCurrentHouseholdIncomeVM.IncomeRanges)</td>
                        </tr>
                        <tr>
                            <td><label class="control-label labe-text">Date Entered:</label></td>
                            <td>@Html.DisplayFor(model => model.CaseCurrentHouseholdIncomeVM.CreatedDate)</td>
                        </tr>
                        <tr>
                            <td><label class="control-label labe-text">Is LICO:</label></td>
                            <td>@Html.DisplayFor(model => model.CaseCurrentHouseholdIncomeVM.IsLICO)</td>
                        </tr>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="container bulk-import">
    <!-- begin: mainpage -->
    <div class="row margin-top-10">
        <div class="col-md-12">
            <div class="col-md-5">
                <div class="form-group02">
                    <label class="control-label labe-text">Case Individuals</label>
                </div>
            </div>
            <div class="col-md-7" style="float:right;">
                <div class="form-group02">
                    <div class="col-sm-5 col-sm-offset-7" style="text-align: right;">
                        <a href="@Url.Action(Constants.Actions.Create, Constants.Controllers.CaseMember, new { caseID = Model.CaseID})" class="btn btn-primary"><i class="fa fa-long-arrow-right"></i>Add Case Individual</a>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-12">
            @(Html.Kendo().Grid<CaseMember>()
                .Name("GridCaseMember")
                .Columns(columns =>
                {
                    columns.Bound(c => c.LastName).Sortable(true).Groupable(false).Filterable(false);
                    columns.Bound(c => c.FirstName).Sortable(true).Groupable(false).Filterable(false);
                    columns.Bound(c => c.GenderName).Sortable(true).Groupable(false).Filterable(false);
                    columns.Bound(c => c.RelationshipStatusName).Sortable(true).Groupable(false).Filterable(false);
                    columns.Bound(c => c.MaritalStatusName).Sortable(true).Groupable(false).Filterable(false);
                    columns.Bound(c => c.EthnicityName).Sortable(true).Groupable(false).Filterable(false);
                    columns.Bound(c => c.LanguageName).Sortable(true).Groupable(false).Filterable(false);
                    columns.Bound(p => p.FancyBoxLink).ClientTemplate("<center><a href='/CaseManagement/CaseMember/Edit/?Id=#= ID #&CaseID=#= CaseID #' style='#= HasPermissionToEdit #'  title='Edit'>Edit</a>&nbsp;<a name='lnkDelete' id='lnkDeleteCaseMember' href='/CaseManagement/CaseMember/DeleteAjax/#= ID #' style='#= HasPermissionToDelete #'  title='Delete'>Delete</a></center>").Width("10%").HtmlAttributes(new { @class = "grid-actions-content" }).HeaderTemplate("<center>Actions</center>").HeaderHtmlAttributes(new { @class = "grid-actions-content" });
                })
                .DataSource(dataSource => dataSource
                .Ajax()
                .Read(read => read.Action("IndexAjax", "CaseMember", new { caseId = Model.CaseID }))
                .PageSize(50)
                )
                .Pageable()
                .Sortable()
            )
        </div>
    </div>
</div>
<div class="container bulk-import">
    <div class="row margin-top-10">
        <div class="col-md-12">
            <div class="col-md-5">
                <div class="form-group02">
                    <label class="control-label labe-text">Case Workers</label>
                </div>
            </div>
            <div class="col-md-7" style="float:right;">
                <div class="form-group02">
                    <div class="col-sm-5 col-sm-offset-7" style="text-align: right;">
                        <a href="@Url.Action(Constants.Actions.Index, Constants.Controllers.CaseWorker, new { caseID = Model.CaseID})" class="btn btn-primary"><i class="fa fa-long-arrow-right"></i>Assign Case Worker</a>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-12">
            @(Html.Kendo().Grid<CaseWorker>()
                            .Name("GridCaseWorker")
                            .Columns(columns =>
                            {
                                columns.Bound(c => c.WorkerName).Sortable(true).Groupable(false).Filterable(false);
                                columns.Bound(c => c.RoleName).Sortable(true).Groupable(false).Filterable(false);
                                columns.Bound(c => c.IsPrimary).ClientTemplate("# if (IsPrimary == true) { # Yes # } else { # No # } #"
                ).Sortable(true).Groupable(false).Filterable(false);
                                columns.Bound(c => c.AllowNotification).ClientTemplate("# if (AllowNotification == true) { # Yes # } else { # No # } #"
                ).Sortable(true).Groupable(false).Filterable(false);
                                //columns.Bound(p => p.ErrorMessage).ClientTemplate("<center><a name='lnkEditor' data-container='divEditorCaseWorker' href='/CaseManagement/CaseWorker/EditorAjax/#= ID #?caseId=#= CaseID #' class='fa fa-edit' title='Edit'></a>&nbsp;<a name='lnkDelete' id='lnkDeleteCaseWorker' href='/CaseManagement/CaseWorker/DeleteAjax/#= ID #' class='fa fa-times' title='Delete'></a></center>").Width("10%").HtmlAttributes(new { @class = "grid-actions-content" }).HeaderTemplate("<center>Actions</center>").HeaderHtmlAttributes(new { @class = "grid-actions-content" });
                                columns.Bound(p => p.FancyBoxLink).ClientTemplate("<center><a href='/CaseManagement/CaseWorker/Edit/?Id=#= ID #' style='#= HasPermissionToEdit #'  title='Edit'>Edit</a>&nbsp;<a name='lnkDelete' id='lnkDeleteCaseWorker' href='/CaseManagement/CaseWorker/DeleteAjax/#= ID #' style='#= HasPermissionToDelete #'  title='Delete'>Delete</a></center>").Width("10%").HtmlAttributes(new { @class = "grid-actions-content" }).HeaderTemplate("<center>Actions</center>").HeaderHtmlAttributes(new { @class = "grid-actions-content" });
                            })
                            .DataSource(dataSource => dataSource
                            .Ajax()
                                    .Read(read => read.Action("IndexAjax", "CaseWorker", new { caseId = Model.CaseID }))
                            .PageSize(50)
                            )
                            .Pageable()
                            .Sortable()
            )
        </div>
    </div>
</div>
