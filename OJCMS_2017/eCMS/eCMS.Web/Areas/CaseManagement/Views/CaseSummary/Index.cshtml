@model eCMS.DataLogic.ViewModels.CaseSummaryVM
@using EasySoft.Helper;
@using eCMS.Shared;
@using eCMS.DataLogic.Models;
@using eCMS.DataLogic.ViewModels;
@{
    Layout = "~/Views/Shared/_LayoutInternal.cshtml";
    ViewBag.Title = "Case Summary";
}
@section headsection
{
    @Styles.Render("~/assets/plugins/kendo/css")
    @Scripts.Render("~/assets/plugins/kendo/js")
}
<style type="text/css">
    #indicators td {
        width: 195px;
        padding: 5px;
        border: 1px solid black;
        text-align: center;
        height: 33px;
    }

    #indicators th {
        width: 220px;
        padding: 5px;
        border: 1px solid black;
        text-align: center;
        height: 33px;
    }

    #indicators td:first-child {
        text-align: left;
    }

    #indicators th:first-child {
        text-align: left;
    }

    #assessment td {
        width: 195px;
        padding: 5px;
        border: 1px solid black;
        text-align: center;
        height: 33px;
    }

    #assessment th {
        width: 220px;
        padding: 5px;
        border: 1px solid black;
        text-align: center;
        height: 33px;
    }

    #assessment td:first-child {
        text-align: left;
    }

    #assessment th:first-child {
        text-align: left;
    }

    #lnkEditor:hover {
        cursor: pointer;
    }

    .fulldescription {
        text-align: justify;
    }
</style>
@Html.HiddenFor(m => m.CaseID)
@Html.HiddenFor(m => m.ProgramID)
@Html.HiddenFor(m => m.CurrentHouseholdIncomeID)
@*<label class="control-label labe-text">Test</label>
    <label class="control-label labe-text">@Html.DisplayFor(model => model.EnrollDate)</label>*@
<div class="container bulk-import">
    <div class="row margin-top-40">
        <div class="align-right">
            <label class="control-label labe-text">
                @Html.ActionLink("Add Work Note", "Index", "CaseWorkerNote", new { CaseID = Model.CaseID, ProgramID = Model.ProgramID }, null)
            </label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            <label class="control-label labe-text">
                @Html.ActionLink("Add SSS Work Note", "Index", "CaseSSSWorkerNote", new { CaseID = Model.CaseID, ProgramID = Model.ProgramID }, null)
            </label>
        </div>
        @if (!Model.DoesHouseHoldIncomeExists || !Model.DoesInitialAssessmentExists || !Model.DoesFamilyMembersExists)
        {
            string message = "";
            string assmessage = "";
            if (!Model.DoesHouseHoldIncomeExists)
            {
                message += "HouseHoldIncome";
            }
            if (!Model.DoesInitialAssessmentExists)
            {
                message += ",Initial Assessment";
                assmessage = "Initial Assessment have to happen within one month of inake.";
            }
            if (!Model.DoesFamilyMembersExists)
            {
                message += ",Family Member Assignment";
            }
            if (!string.IsNullOrEmpty(assmessage) && message.Length > 0)
            {
                <div class="col-md-12" style="background:yellow;padding-left:10px;border:1px solid black;">
                    <label class="control-label labe-text">
                        @if (message.StartsWith(","))
                        {
                            @:The following sections are not complete : @message.Substring(1, message.Length - 1)
                }
                        @if (!string.IsNullOrEmpty(assmessage))
                        {
                            @:<br />
                            @assmessage
                        }
                    </label>
                </div>
            }

        }
        <div class="center-block" style="align-items:center;">
            <table class="table table-striped text-align-center" align="center" style="width:100%;">
                <thead>
                    <tr>
                        <th style="width:30%;"><label class="control-label labe-text">Demographics:</label></th>
                        <th style="width:20%;">&nbsp;</th>
                        <th class="control-label labe-text" style="width:50%;text-align:right">@Html.ActionLink("Edit Demographics", "Edit", "Case", new { CaseID = Model.CaseID }, null)</th>
                    </tr>
                </thead>
                <tr>
                    <td>
                        <label class="control-label labe-text">Program:</label>
                    </td>
                    <td style="vertical-align:central;">
                        @Html.DisplayFor(model => model.Program)
                    </td>
                    <td style="width:50%;">&nbsp;</td>
                </tr>
                <tr>
                    <td>
                        <label class="control-label labe-text">Primary Coordinator:</label>
                    </td>
                    <td>@Html.DisplayFor(model => model.SubProgram)</td>
                    <td style="width:50%;">&nbsp;</td>
                </tr>
                <tr>
                    <td>
                        <label class="control-label labe-text">Region:</label>
                    </td>
                    <td>@Html.DisplayFor(model => model.Region)</td>
                    <td style="width:50%;">&nbsp;</td>
                </tr>
                <tr>
                    <td>
                        <label class="control-label labe-text">Jamatkhana:</label>
                    </td>
                    <td>@Html.DisplayFor(model => model.Jamatkhaana)</td>
                    <td style="width:50%;">&nbsp;</td>
                </tr>
                <tr>
                    <td>
                        <label class="control-label labe-text">Reference Case:</label>
                    </td>
                    <td>@Html.DisplayFor(model => model.ReferenceCase)</td>
                    <td style="width:50%;">&nbsp;</td>
                </tr>
                <tr>
                    <td>
                        <label class="control-label labe-text">Enrollment Date:</label>
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.EnrolmentDate)
                    </td>
                    <td style="width:50%;">&nbsp;</td>
                </tr>
                <tr>
                    <td>
                        <label class="control-label labe-text">Intake Method:</label>
                    </td>
                    <td>@Html.DisplayFor(model => model.IntakeMethod)</td>
                    <td style="width:50%;">&nbsp;</td>
                </tr>
                <tr>
                    <td>
                        <label class="control-label labe-text">Referral Source:</label>
                    </td>
                    <td>@Html.DisplayFor(model => model.ReferralSource)</td>
                    <td style="width:50%;">&nbsp;</td>
                </tr>
                <tr>
                    <td>
                        <label class="control-label labe-text">Referral Date:</label>
                    </td>
                    <td>@Html.DisplayFor(model => model.ReferralDate)</td>
                    <td style="width:50%;">&nbsp;</td>
                </tr>
                <tr>
                    <td>
                        <label class="control-label labe-text">Risk Level:</label>
                    </td>
                    <td>@Html.DisplayFor(model => model.RiskLevel)</td>
                    <td style="width:50%;">&nbsp;</td>
                </tr>
                @*<tr>
                        <td>
                            <label class="control-label labe-text">Presenting Problem (Reason for seeking support):</label>
                        </td>
                        <td>@Html.DisplayFor(model => model.PresentingProblem)</td>
                        <td style="width:50%;">&nbsp;</td>
                    </tr>*@
                <tr>
                    <td>
                        <label class="control-label labe-text">Address:</label>
                    </td>
                    <td>@Html.DisplayFor(model => model.Address)</td>
                    <td style="width:50%;">&nbsp;</td>
                </tr>
                <tr>
                    <td>
                        <label class="control-label labe-text">City:</label>
                    </td>
                    <td>@Html.DisplayFor(model => model.City)</td>
                    <td style="width:50%;">&nbsp;</td>
                </tr>
                <tr>
                    <td>
                        <label class="control-label labe-text">Postal Code:</label>
                    </td>
                    <td>@Html.DisplayFor(model => model.PostalCode)</td>
                    <td style="width:50%;">&nbsp;</td>
                </tr>
                <tr>
                    <td style="width:30%;"><label class="control-label labe-text">Reason for seeking support:</label></td>
                    <td style="width:20%;">&nbsp;</td>
                    <td style="width:50%;">&nbsp;</td>
                </tr>
                <tr>
                    <td>
                        <label class="control-label labe-text">Area of need:</label>
                    </td>
                    <td>@Html.DisplayFor(model => model.AreaOfNeed)</td>
                    <td style="width:50%;">&nbsp;</td>
                </tr>
                <tr>
                    <td>
                        <label class="control-label labe-text">Reason for seeking support:</label>
                    </td>
                    <td>@Html.DisplayFor(model => model.PresentingProblem)</td>
                    <td style="width:50%;">&nbsp;</td>
                </tr>
            </table>

            <div class="col-md-12">
                <div class="col-md-4">
                    <div class="form-group02">
                        <label class="control-label labe-text">Status:</label>
                    </div>
                </div>
                <div class="col-md-8">
                    <div class="form-group02" style="text-align: right;float:right;">
                        <a href="@Url.Action(Constants.Actions.Index, Constants.Controllers.CaseStatusHistory, new { CaseId = Model.CaseID})" class="btn btn-primary"><i class="fa fa-long-arrow-right"></i>Change Status</a>
                    </div>
                </div>
            </div>
            <div class="col-md-12">
                <div class="col-md-5">
                    <div class="form-group02">
                        <label class="control-label labe-text">Current Status:</label>
                    </div>
                </div>
                <div class="col-md-7">
                    <div class="form-group02" style="text-align: left;">
                        @Html.DisplayFor(model => model.CaseStatus)
                    </div>
                </div>
            </div>
            <div class="row margin-top-10">
                <div class="col-md-12">
                    <div class="col-md-5">
                        <div class="form-group02">
                            <label class="control-label labe-text">Status History</label>
                        </div>
                    </div>
                </div>
                <div class="col-md-12">
                    @(Html.Kendo().Grid<CaseStatusHistoryVM>()
    .Name("GridCaseStatusHistory")
    .Columns(columns =>
    {
        columns.Bound(c => c.CreatedDate).Sortable(true).Groupable(false).Filterable(false);
        columns.Bound(c => c.CaseStatus).Sortable(true).Groupable(false).Filterable(false);
        columns.Bound(c => c.Reason).Sortable(true).Groupable(false).Filterable(false);
        columns.Bound(c => c.Justification).Sortable(true).Groupable(false).Filterable(false);
    })
    .DataSource(dataSource => dataSource
    .Ajax()
    .Read(read => read.Action("IndexAjax", "CaseSummary", new { caseId = Model.CaseID }))
    .PageSize(50)
    )
    .Pageable()
    .Sortable()
                    )
                </div>
            </div>

            <br class="clear" />

            <div class="col-md-12">
                <div class="col-md-6 table-bordered">
                    <div class="align-left">
                        <label class="control-label labe-text">household Income:</label>
                    </div>
                    <table class="col-md-12">
                        <thead>
                            <tr>
                                <th colspan="2">
                                    <label class="control-label labe-text">Initial household Income:</label>
                                </th>
                            </tr>
                        </thead>
                        <tr>
                            <td><label class="control-label labe-text">Number of members in the household:</label></td>
                            <td>@Html.DisplayFor(model => model.CaseInitialHouseholdIncomeVM.NoOfMembers)</td>
                        </tr>
                        <tr>
                            <td><label class="control-label labe-text">Number of children in the household:</label></td>
                            <td>@Html.DisplayFor(model => model.CaseInitialHouseholdIncomeVM.NoOfChild)</td>
                        </tr>
                        <tr>
                            <td><label class="control-label labe-text">Number of seniors (+65) in the household:</label></td>
                            <td>@Html.DisplayFor(model => model.CaseInitialHouseholdIncomeVM.NoOfSeniors)</td>
                        </tr>
                        <tr>
                            <td><label class="control-label labe-text">Number of physically disabled members in the household:&nbsp;</label></td>
                            <td>@Html.DisplayFor(model => model.CaseInitialHouseholdIncomeVM.NoOfPhysicallyDisabled)</td>
                        </tr>
                        <tr>
                            <td><label class="control-label labe-text">Household gross income range (annual):</label></td>
                            <td>@Html.DisplayFor(model => model.CaseInitialHouseholdIncomeVM.IncomeRanges)</td>
                        </tr>
                        <tr>
                            <td><label class="control-label labe-text">Date Entered:</label></td>
                            <td>@Html.DisplayFor(model => model.CaseInitialHouseholdIncomeVM.CreatedDate)</td>
                        </tr>
                        <tr>
                            <td><label class="control-label labe-text">Is LICO:</label></td>
                            @if (Model.CaseInitialHouseholdIncomeVM != null)
                            {
                                if (Model.CaseInitialHouseholdIncomeVM.IsLICO)
                                {
                                    <td>Yes</td>
                                }
                                else
                                {
                                    <td>No</td>
                                }
                            }

                        </tr>
                    </table>

                </div>
                <div class="col-md-6 table-bordered">
                    <div class="align-right">
                        <label class="control-label labe-text" style="text-align:right;float:right;">
                            @Html.ActionLink("Update Household Income", Constants.Actions.Edit, Constants.Controllers.CaseHouseholdIncome, new { CaseID = Model.CaseID, IncomeID = Model.CurrentHouseholdIncomeID }, null)
                        </label>
                    </div>
                    <br /><br />
                    <table class="col-md-12">
                        <thead>
                            <tr>
                                <th colspan="2">
                                    <label class="control-label labe-text">Current household Income:</label>
                                </th>
                            </tr>
                        </thead>
                        <tr>
                            <td><label class="control-label labe-text">Number of members in the household:</label></td>
                            <td>@Html.DisplayFor(model => model.CaseCurrentHouseholdIncomeVM.NoOfMembers)</td>
                        </tr>
                        <tr>
                            <td><label class="control-label labe-text">Number of children in the household:</label></td>
                            <td>@Html.DisplayFor(model => model.CaseCurrentHouseholdIncomeVM.NoOfChild)</td>
                        </tr>
                        <tr>
                            <td><label class="control-label labe-text">Number of seniors (+65) in the household:</label></td>
                            <td>@Html.DisplayFor(model => model.CaseCurrentHouseholdIncomeVM.NoOfSeniors)</td>
                        </tr>
                        <tr>
                            <td><label class="control-label labe-text">Number of physically disabled members in the household:&nbsp;</label></td>
                            <td>@Html.DisplayFor(model => model.CaseCurrentHouseholdIncomeVM.NoOfPhysicallyDisabled)</td>
                        </tr>
                        <tr>
                            <td><label class="control-label labe-text">Household gross income range (annual):</label></td>
                            <td>@Html.DisplayFor(model => model.CaseCurrentHouseholdIncomeVM.IncomeRanges)</td>
                        </tr>
                        <tr>
                            <td><label class="control-label labe-text">Date Entered:</label></td>
                            <td>@Html.DisplayFor(model => model.CaseCurrentHouseholdIncomeVM.CreatedDate)</td>
                        </tr>
                        <tr>
                            <td><label class="control-label labe-text">Is LICO:</label></td>
                            @if (Model.CaseCurrentHouseholdIncomeVM != null)
                            {
                                if (Model.CaseCurrentHouseholdIncomeVM.IsLICO)
                                {
                                    <td>Yes</td>
                                }
                                else
                                {
                                    <td>No</td>
                                }
                            }
                        </tr>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="container bulk-import">
    <!-- begin: mainpage -->
    <div class="row margin-top-10">
        <div class="col-md-12">
            <div class="col-md-5">
                <div class="form-group02">
                    <label class="control-label labe-text">Case Individuals</label>
                </div>
            </div>
            <div class="col-md-7" style="float:right;">
                <div class="form-group02">
                    <div class="col-sm-5 col-sm-offset-7" style="text-align: right;">
                        <a href="@Url.Action(Constants.Actions.Create, Constants.Controllers.CaseMember, new { caseID = Model.CaseID})" class="btn btn-primary"><i class="fa fa-long-arrow-right"></i>Add Case Individual</a>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-12">
            @(Html.Kendo().Grid<CaseMember>()
                .Name("GridCaseMember")
                .Columns(columns =>
                {
                    columns.Bound(c => c.LastName).Sortable(true).Groupable(false).Filterable(false);
                    columns.Bound(c => c.FirstName).Sortable(true).Groupable(false).Filterable(false);
                    columns.Bound(c => c.GenderName).Sortable(true).Groupable(false).Filterable(false);
                    columns.Bound(c => c.RelationshipStatusName).Sortable(true).Groupable(false).Filterable(false);
                    columns.Bound(c => c.MaritalStatusName).Sortable(true).Groupable(false).Filterable(false);
                    columns.Bound(c => c.EthnicityName).Sortable(true).Groupable(false).Filterable(false);
                    columns.Bound(c => c.LanguageName).Sortable(true).Groupable(false).Filterable(false);
                    columns.Bound(p => p.FancyBoxLink).ClientTemplate("<center><a href='/CaseManagement/CaseMember/Edit/?Id=#= ID #&CaseID=#= CaseID #' style='#= HasPermissionToEdit #'  title='Edit'>Edit</a>&nbsp;<a name='lnkDelete' id='lnkDeleteCaseMember' href='/CaseManagement/CaseMember/DeleteAjax/#= ID #' style='#= HasPermissionToDelete #'  title='Delete'>Delete</a></center>").Width("10%").HtmlAttributes(new { @class = "grid-actions-content" }).HeaderTemplate("<center>Actions</center>").HeaderHtmlAttributes(new { @class = "grid-actions-content" });
                })
                .DataSource(dataSource => dataSource
                .Ajax()
                .Read(read => read.Action("IndexAjax", "CaseMember", new { caseId = Model.CaseID }))
                .PageSize(50)
                )
                .Pageable()
                .Sortable()
            )
        </div>
    </div>
</div>
<div class="container bulk-import">
    <div class="row margin-top-10">
        <div class="col-md-12">
            <div class="col-md-5">
                <div class="form-group02">
                    <label class="control-label labe-text">JK Support Team:</label>
                </div>
            </div>
            <div class="col-md-7">
                <div class="form-group02" style="text-align: right;float:right;">
                    <a href="@Url.Action(Constants.Actions.Index, Constants.Controllers.CaseWorker, new { caseID = Model.CaseID})" class="btn btn-primary"><i class="fa fa-long-arrow-right"></i>Manage Staff / Volunteer Assignments</a>
                </div>
            </div>
        </div>
        <div class="col-md-12">
            @Html.Partial("~/Areas/CaseManagement/Views/CaseWorker/_Index.cshtml", new CaseWorker() { CaseID = Model.CaseID })
        </div>
    </div>
</div>
<div class="container bulk-import">
    <div class="row margin-top-10">
        @if (!Model.DoesInitialAssessmentExists)
        {
        <div class="col-md-12">
            <div class="col-md-5">
                <div class="form-group02">
                    <label class="control-label labe-text">Assessment:</label>
                </div>
            </div>
            <div class="col-md-7" style="float:right;">
                <div class="form-group02">
                    <div class="col-sm-5 col-sm-offset-7" style="text-align: right;">
                        <a href="@Url.Action(Constants.Actions.Index, Constants.Controllers.CaseInitialAssessment, new { caseID = Model.CaseID})" class="btn btn-primary"><i class="fa fa-long-arrow-right"></i>Create Assessment</a>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-12" style="background:yellow;padding-left:10px;border:1px solid black;">
            <label class="control-label labe-text">Initial Assessment have to happen within one month of inake.</label>
        </div>
        }
        else
        {
        <div class="col-md-12">
            <div class="col-md-5">
                <div class="form-group02">
                    <label class="control-label labe-text">Assessment as on (MM/DD/yyyy) @System.DateTime.Now.ToString("MM/dd/yyyy")</label>
                </div>
            </div>
            <div class="col-md-7" >
                <div class="form-group02" style="float:right;text-align:right;">
                        <a href="@Url.Action(Constants.Actions.Index, Constants.Controllers.CaseAssessmentSummary, new { caseID = Model.CaseID})" class="btn btn-primary"><i class="fa fa-long-arrow-right"></i>View Assessment Summary</a>
                        <span id="showAssessmentChart" style="cursor:pointer;" class="btn btn-primary">Show Assessment Chart</span>
                        <a href="@Url.Action(Constants.Actions.Index, Constants.Controllers.CaseInitialAssessment, new { caseID = Model.CaseID})" class="btn btn-primary"><i class="fa fa-long-arrow-right"></i>Create Assessment</a>
                </div>
            </div>
            @*<div class="col-md-5" style="float:right;">
                    <div class="form-group02">
                        <div class="col-sm-5 col-sm-offset-7" style="text-align: right;">

                        </div>
                    </div>
                </div>*@
        </div>
            if (Model.AssesmentIndicators.Count > 0)
            {
        <div class="col-lg-12" id="divAssessmentChart" style="display:none;">
            <div class="col-lg-12 col-md-11 candidate-table-bg">
                <div class="row">
                    <table id="indicators" cellpadding="2">
                        <thead>
                            <tr style="height:50px;padding-left:5px;">
                                <th>Indicators</th>
                                <th>1</th>
                                <th>2</th>
                                <th>3</th>
                                <th>4</th>
                                <th>5</th>
                                <th>6</th>
                                @*<th>Not Applicable</th>*@
                            </tr>
                        </thead>
                        <tbody style="background:none;">
                            @foreach (var item in Model.AssesmentIndicators)
                                    {
                                    @*<tr>
                                            <td>@item.IndicatorName</td>
                                            <td>@Html.RadioButton("rd" + item.IndicatorTypeID + "", 1, false, new { @id = item.IndicatorTypeID, @class = "rdind" })</td>
                                            <td>@Html.RadioButton("rd" + item.IndicatorTypeID + "", 2, false, new { @id = item.IndicatorTypeID, @class = "rdind" })</td>
                                            <td>@Html.RadioButton("rd" + item.IndicatorTypeID + "", 3, false, new { @id = item.IndicatorTypeID, @class = "rdind" })</td>
                                            <td>@Html.RadioButton("rd" + item.IndicatorTypeID + "", 4, false, new { @id = item.IndicatorTypeID, @class = "rdind" })</td>
                                            <td>@Html.RadioButton("rd" + item.IndicatorTypeID + "", 5, false, new { @id = item.IndicatorTypeID, @class = "rdind" })</td>
                                            <td>@Html.RadioButton("rd" + item.IndicatorTypeID + "", 6, false, new { @id = item.IndicatorTypeID, @class = "rdind" })</td>
                                            <td>@Html.RadioButton("rd" + item.IndicatorTypeID + "", 0, false, new { @id = item.IndicatorTypeID, @class = "rdind" })</td>
                                        </tr>*@
                                    <tr>
                                        <td>@item.IndicatorName</td>
                                        <td class="fulldescription">@(item.AssesmentIndicatorDescription1) </td>
                                        <td class="fulldescription">@(item.AssesmentIndicatorDescription2) </td>
                                        <td class="fulldescription">@(item.AssesmentIndicatorDescription3) </td>
                                        <td class="fulldescription">@(item.AssesmentIndicatorDescription4) </td>
                                        <td class="fulldescription">@(item.AssesmentIndicatorDescription5) </td>
                                        <td class="fulldescription">@(item.AssesmentIndicatorDescription6) </td>
                                        @*<td>&nbsp;</td>*@
                                    </tr>
                                    }
                        </tbody>
                    </table>
                </div>
                <div class="row" style="text-align:center;margin-bottom:10px;margin-top:10px;display:none;" id="divSaveAssessment">
                    <button type="button" class="btn btn-primary" id="btnSaveAssessment"><i class="fa fa-save"></i> Save </button>
                </div>
            </div>
        </div>
            }
            if (Model.AssesmentIndicators.Count > 0)
            {
        <div class="col-lg-12" style="margin-top:10px;">
            <div class="col-lg-12 col-md-11 candidate-table-bg">
                <div class="row">
                    <table id="assessment" cellpadding="2">
                        <thead>
                            <tr style="height:50px;padding-left:5px;">
                                <th>Family Member</th>
                                @foreach (var item in Model.AssesmentIndicators)
                                        {
                                        <th>
                                            @item.IndicatorName
                                        </th>
                                        }
                                @*<th>&nbsp;</th>*@
                            </tr>
                        </thead>
                        <tbody style="background:none;">
                            @foreach (var member in Model.CaseInitialAssessment.Select(m => new { m.CaseMemberName, m.CaseMemberID }).Distinct())
                                    {
                                    <tr>
                                        <td>@member.CaseMemberName</td>
                                        <td style="display:none;">@member.CaseMemberID</td>
                                        @foreach (var item in Model.CaseInitialAssessment.Where(c => c.CaseMemberName == member.CaseMemberName).OrderBy(c => c.IndicatorTypeID))
                                            {
                                            <td class="clsind" data-memberid="@item.CaseMemberID" data-indicatorid="@item.IndicatorTypeID" data-assessmentvalue="@item.AssessmentValue">@(item.AssessmentValue > 0 ? item.AssessmentValue.ToString() : "")</td>
                                            }
                                        @*<td>
                                                <a id="lnkEditor" class="lnkEditor" data-membername="@member.CaseMemberName" title="Edit">Edit</a>
                                            </td>*@
                                    </tr>
                                    }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
            }
        }
    </div>
</div>
<div class="container bulk-import">
    <div class="row margin-top-10">
        <div class="col-md-12">
            <div class="col-md-5">
                <div class="form-group02">
                    <label class="control-label labe-text">Service Plan:</label>
                </div>
            </div>
            <div class="col-md-7">
                <div class="form-group02" style="text-align: right;float:right;">
                    <a href="@Url.Action(Constants.Actions.ServicePlanHistory, Constants.Controllers.CaseGoalNew, new { caseID = Model.CaseID })" class="btn btn-primary"><i class="fa fa-long-arrow-right"></i>Service Plan History</a>
                    <a href="@Url.Action(Constants.Actions.Index, Constants.Controllers.CaseGoalNew, new { caseID = Model.CaseID})" class="btn btn-primary"><i class="fa fa-long-arrow-right"></i>Add Goal</a>
                </div>
            </div>
        </div>
        <div class="col-md-12" style="overflow-y:scroll;">
            @(Html.Kendo().Grid<CaseGoalGridVM>()
                .Name("GridCaseGoalNew")
                .Columns(columns =>
                {
                    columns.Bound(c => c.GoalDetail).Sortable(true).Groupable(false).Filterable(false);
                    columns.Bound(c => c.Indicators).Sortable(true).Groupable(false).Filterable(false);
                    columns.Bound(c => c.FamilyMember).Sortable(true).Groupable(false).Filterable(false);
                    columns.Bound(c => c.Priority).Sortable(true).Groupable(false).Filterable(false);
                    columns.Bound(c => c.ActionsSummary).Sortable(true).Groupable(false).Filterable(false);
                    columns.Bound(c => c.GoalStatus).Sortable(true).Groupable(false).Filterable(false);
                    columns.Bound(c => c.CreateDate).Format("{0:yyyy-MM-dd}").Sortable(true).Groupable(false).Filterable(false);
                    columns.Bound(c => c.LastUpdateDate).Format("{0:yyyy-MM-dd}").Sortable(true).Groupable(false).Filterable(false);
                    columns.Bound(p => p.Actions).ClientTemplate("<center><a href='/CaseManagement/CaseGoalNew/Edit/?Id=#= CaseGoalID #&CaseID=#= CaseID #'  title='Edit'>Edit</a>&nbsp;<a href='/CaseManagement/CaseActionNew/Index/?caseId=#= CaseID #&caseGoalId=#= CaseGoalID #'  title='Summary'>Summary</a>&nbsp;</center>").Width("10%")
                        .HtmlAttributes(new { @class = "grid-actions-content" })
                        .HeaderTemplate("<center>Actions</center>")
                        .HeaderHtmlAttributes(new { @class = "grid-actions-content" });
                })
                .DataSource(dataSource => dataSource
                .Ajax()
                .Read(read => read.Action("IndexAjax", "CaseGoalNew", new { caseId = Model.CaseID }))
                .PageSize(50)
                )
                .Pageable()
                //.Scrollable()
                .Sortable()
            )
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        TrimDataLoad();
        $("#showAssessmentChart").click(function () {
            if ($('#divAssessmentChart').css('display') == 'none') {
                $('#showAssessmentChart').text('Hide Assessment Chart');
            }
            else {
                $('#showAssessmentChart').text('Show Assessment Chart');
            }
            $('#divAssessmentChart').toggle();
        });

    });
    function TrimDataLoad() {
        var showChar = 41;  // How many characters are shown by default
        var ellipsestext = "...";
        var moretext = "<b style='color: #ca4263;'>Show More</b>";
        var lesstext = "<b>Show Less</b>";


        $('.fulldescription').each(function () {
            var content = $(this).html();

            if (content.length > showChar) {

                var c = content.substr(0, showChar);
                var h = content.substr(showChar, content.length - showChar);

                var html = c + '<span class="moreellipses">' + ellipsestext + '&nbsp;</span><span class="morecontent"><span style="display:none;">' + h + '</span>&nbsp;&nbsp;<a href="" class="morelink">' + moretext + '</a></span>';

                $(this).html(html);
            }

        });

        $(".morelink").click(function () {
            if ($(this).hasClass("less")) {
                $(this).removeClass("less");
                $(this).html(moretext);
            } else {
                $(this).addClass("less");
                $(this).html(lesstext);
            }
            $(this).parent().prev().toggle();
            $(this).prev().toggle();
            return false;
        });
    }
</script>