@model eCMS.DataLogic.Models.CaseGoalNew
@using EasySoft.Helper;
@using eCMS.Shared;
@using eCMS.DataLogic.Models;
@using eCMS.DataLogic.ViewModels;
@{
    Layout = "~/Views/Shared/_LayoutInternal.cshtml";
    ViewBag.Title = "Case Goal";
}
@section headsection
{
    @Styles.Render("~/assets/plugins/kendo/css")
    @Scripts.Render("~/assets/plugins/kendo/js")
}

<style type="text/css">
    #indicators td {
        width: 195px;
        padding: 5px;
        border: 1px solid black;
        text-align: center;
        height: 33px;
    }

    #indicators th {
        width: 220px;
        padding: 5px;
        border: 1px solid black;
        text-align: center;
        height: 33px;
    }

    #indicators td:first-child {
        text-align: left;
    }

    #indicators th:first-child {
        text-align: left;
    }

    #assessment td {
        width: 195px;
        padding: 5px;
        border: 1px solid black;
        text-align: center;
        height: 33px;
    }

    #assessment th {
        width: 220px;
        padding: 5px;
        border: 1px solid black;
        text-align: center;
        height: 33px;
    }

    #assessment td:first-child {
        text-align: left;
    }

    #assessment th:first-child {
        text-align: left;
    }

    #lnkEditor:hover {
        cursor: pointer;
    }

    .fulldescription {
        text-align: justify;
    }
</style>
<div class="container bulk-import">
    <div class="col-md-12">
        <div class="col-md-7">
            <div class="form-group02">
                <div class="col-sm-5">
                    <label class="control-label labe-text">@Html.Label("Goal for ")</label>
                </div>
                <div class="col-sm-7">
                    @Html.TextBoxFor(model => model.GoalDetail, new { @readonly = "readonly" })
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-12">
        <div class="col-md-7">
            <div class="form-group02">
                <div class="col-sm-5">
                    <label class="col-sm-4 control-label labe-text">@Html.LabelRequiredFor(model => model.PriorityTypeID)</label>
                </div>
                <div class="col-sm-7">
                    @(Html.Kendo().DropDownListFor(model => model.PriorityTypeID)
                        .OptionLabel(Constants.UIConstants.DropDownListDefaulLabel)
                        .DataTextField("Text")
                        .DataValueField("Value")
                        .DataSource(source =>
                        {
                            source.Read(read =>
                            {
                                read.Action("LoadRiskTypeAjax", "CaseAssessment");
                            });
                        })
                    )
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-12">
        <div class="col-md-7">
            <div class="form-group02">
                <div class="col-sm-5">
                    <label class="col-sm-4 control-label labe-text">@Html.LabelRequiredFor(model => model.GoalStatusID)</label>
                </div>
                <div class="col-sm-6">
                    @(Html.Kendo().DropDownListFor(model => model.GoalStatusID)
                        .OptionLabel(Constants.UIConstants.DropDownListDefaulLabel)
                        .DataTextField("Text")
                        .DataValueField("Value")
                        .DataSource(source =>
                        {
                            source.Read(read =>
                            {
                                read.Action("LoadGoalStatusAjax", "CaseActionNew");
                            });
                        })
                    )
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-12">
        <div class="col-md-5">
            <div class="form-group02">
                <label class="control-label labe-text">Actions (Optional):</label>
            </div>
        </div>
    </div>
    <div class="col-md-12">
        <div class="col-md-7">
            <div class="form-group02">
                <div class="col-sm-5">
                    <label class="control-label labe-text">@Html.Label("Action Details:")</label>
                </div>
                <div class="col-sm-6">
                    @Html.TextAreaFor(model => model.CaseActionNew.ActionDetail, new { @class = "form-control", rows = 4, cols = 50 })
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-12">
        <div class="col-md-7">
            <div class="form-group02">
                <div class="col-sm-5">
                    <label class="col-sm-4 control-label labe-text">@Html.LabelRequiredFor(model => model.CaseActionNew.GoalAssigneeRoleID)</label>
                </div>
                <div class="col-sm-6">
                    @(Html.Kendo().DropDownListFor(model => model.CaseActionNew.GoalAssigneeRoleID)
                        .OptionLabel(Constants.UIConstants.DropDownListDefaulLabel)
                        .DataTextField("Text")
                        .DataValueField("Value")
                        .DataSource(source =>
                        {
                            source.Read(read =>
                            {
                                read.Action("LoadGoalAssigneeRoleAjax", "CaseActionNew");
                            });
                        })
                    )
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-12">
        <div class="col-sm-5">
            <label class="control-label labe-text">@Html.Label("Work Notes (Optional):")</label>
        </div>
    </div>
    <div class="col-md-12">
        @(Html.Kendo().Grid<CaseGoalWorkNoteGridVM>()
                .Name("GridGoalActionWorkNote")
                .Columns(columns =>
                {
                    columns.Bound(c => c.CreateDate).Sortable(true).Groupable(false).Filterable(false);
                    columns.Bound(c => c.Note).Sortable(true).Groupable(false).Filterable(false);
                    columns.Bound(c => c.ContactMethod).Sortable(true).Groupable(false).Filterable(false);
                    columns.Bound(c => c.NoteDate).Sortable(true).Groupable(false).Filterable(false);
                    columns.Bound(c => c.TimeSpent).Sortable(true).Groupable(false).Filterable(false);
                    columns.Bound(c => c.GoalDetail).Sortable(true).Groupable(false).Filterable(false);
                })
                .DataSource(dataSource => dataSource
                .Ajax()
                .Read(read => read.Action("IndexAjax", "CaseActionNew", new { caseGoalId = Model.ID }))
                .PageSize(50)
                )
                .Pageable()
                .Sortable()
        )
    </div>
</div>