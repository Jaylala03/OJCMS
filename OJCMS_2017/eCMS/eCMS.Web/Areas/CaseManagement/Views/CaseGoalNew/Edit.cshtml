@model eCMS.DataLogic.Models.CaseGoalNew
@using EasySoft.Helper;
@using eCMS.Shared;
@using eCMS.DataLogic.Models;
@using eCMS.DataLogic.ViewModels;
@{
    Layout = "~/Views/Shared/_LayoutInternal.cshtml";
    ViewBag.Title = "Case Goal";
}
@section headsection
{
    @Styles.Render("~/assets/plugins/kendo/css")
    @Scripts.Render("~/assets/plugins/kendo/js")
}

<style type="text/css">
    #indicators td {
        width: 195px;
        padding: 5px;
        border: 1px solid black;
        text-align: center;
        height: 33px;
    }

    #indicators th {
        width: 220px;
        padding: 5px;
        border: 1px solid black;
        text-align: center;
        height: 33px;
    }

    #indicators td:first-child {
        text-align: left;
    }

    #indicators th:first-child {
        text-align: left;
    }

    #assessment td {
        width: 195px;
        padding: 5px;
        border: 1px solid black;
        text-align: center;
        height: 33px;
    }

    #assessment th {
        width: 220px;
        padding: 5px;
        border: 1px solid black;
        text-align: center;
        height: 33px;
    }

    #assessment td:first-child {
        text-align: left;
    }

    #assessment th:first-child {
        text-align: left;
    }

    #lnkEditor:hover {
        cursor: pointer;
    }

    .fulldescription {
        text-align: justify;
    }
</style>
<div class="container bulk-import">
    <div class="col-md-12">
        <div class="col-md-5">
            <div class="form-group02">
                <label class="control-label labe-text">Assessment as on (MM/DD/yyyy) @System.DateTime.Now.ToString("MM/dd/yyyy")</label>
            </div>
        </div>
        <div class="col-md-7" style="float:right;">
            <div class="form-group02">
                <label>
                    <span id="showAssessmentChart" style="cursor:pointer;" class="btn btn-primary">Show Assessment Chart</span>
                </label>
            </div>
        </div>
    </div>

    <div class="col-md-12">
        <div class="col-md-5">
            <div class="form-group02">
                <label class="control-label labe-text">Goal Details:</label>
            </div>
        </div>
    </div>
    @using (Html.BeginForm(Constants.Actions.Edit, Constants.Controllers.CaseGoalNew, new { area = Constants.Areas.CaseManagement }, FormMethod.Post, new { id = "frmEditor", role = "form" }))
    {
        @Html.HiddenFor(model => model.CaseID)
        @Html.HiddenFor(model => model.ID)

        <div class="col-md-12">
            <div class="col-md-5">
                <div class="form-group02">
                    <div class="col-sm-3">
                        <span>
                            @Html.RadioButtonFor(model => model.Family, "Family")
                        </span>
                        <label class="control-label labe-text">@Html.LabelFor(model => model.IsFamily)</label>
                    </div>
                    <div class="col-sm-5">
                        <span>
                            @Html.RadioButtonFor(model => model.Family, "FamilyMember")
                        </span>
                        <label class="control-label labe-text">@Html.LabelFor(model => model.IsFamilyMember)</label>
                    </div>
                    <div class="col-sm-4">
                        @(Html.Kendo().DropDownListFor(model => model.CaseMemberID)
                    .OptionLabel(Constants.UIConstants.DropDownListDefaulLabel)
                    .DataTextField("Text")
                    .DataValueField("Value")
                    .DataSource(source =>
                    {
                        source.Read(read =>
                        {
                            read.Action("LoadCaseMemberListAjax", "CaseGoalNew", new { caseID = Model.CaseID });
                        });
                    }).Enable(false)
                        )
                    </div>
                </div>

            </div>
        </div>

        <div class="col-md-12">
            <div class="col-md-5">
                <div class="form-group02">
                    <div class="col-sm-3">
                        <label class="control-label labe-text">@Html.Label("Indicators:")</label>
                    </div>
                    <div class="col-sm-9">
                        @*@if (Model.AssesmentIndicators.Count > 0)
                            {
                                foreach (var g in Model.AssesmentIndicators)
                                {
                                    var checkBoxId = "chk" + g.IndicatorTypeID;
                                    <input type="checkbox" id="@checkBoxId" class="chkclass" value="@g.IndicatorTypeID" />
                                    <label>@g.IndicatorName</label>
                                }
                            }*@
                        <label> @Html.CheckBoxFor(m => m.Education)Educaion</label>
                        <label>
                            @Html.CheckBoxFor(m => m.IncomeLivelihood)Income & Livelihood
                        </label>
                        <label>
                            @Html.CheckBoxFor(m => m.Assets)Assets & Life Skills
                        </label>
                        <label>
                            @Html.CheckBoxFor(m => m.Housing)Housing
                        </label>
                        <label>
                            @Html.CheckBoxFor(m => m.SocialSupport)Social Support
                        </label>
                        <label>
                            @Html.CheckBoxFor(m => m.Dignity)Dignity & Self Respect
                        </label>
                        <label>@Html.CheckBoxFor(m => m.Health)Health</label>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-12">
            <div class="col-md-7">
                <div class="form-group02">
                    <div class="col-sm-3">
                        <label class="control-label labe-text">@Html.Label("Goal Details:")</label>
                    </div>
                    <div class="col-sm-7">
                        @Html.TextAreaFor(model => model.GoalDetail, new { rows = 4, cols = 50 })
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-12">
            <div class="col-md-7">
                <div class="form-group02">
                    <div class="col-sm-3">
                        <label class="col-sm-4 control-label labe-text">@Html.LabelRequiredFor(model => model.PriorityTypeID)</label>
                    </div>
                    <div class="col-sm-7">
                        @(Html.Kendo().DropDownListFor(model => model.PriorityTypeID)
                        .OptionLabel(Constants.UIConstants.DropDownListDefaulLabel)
                        .DataTextField("Text")
                        .DataValueField("Value")
                        .DataSource(source =>
                        {
                            source.Read(read =>
                            {
                                read.Action("LoadRiskTypeAjax", "CaseAssessment");
                            });
                        })
                        )
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-12">
            <div class="col-md-12">
                <div class="form-group02">
                    <div class="col-sm-7">
                        <div class="form-group02">
                            <label class="col-sm-8 control-label labe-text" style="font-weight:bold;">Work Notes: (Optional)</label>
                        </div>
                        <div class="form-group02">
                            <label class="col-sm-3 control-label labe-text">@Html.LabelRequiredFor(model => model.GoalActionWorkNote.Note)</label>
                            <div class="col-sm-7">
                                @Html.TextAreaFor(model => model.GoalActionWorkNote.Note, new { @class = "form-control", rows = 4, cols = 50 })
                            </div>

                        </div>
                        <div class="form-group02">
                            <label class="col-sm-3 control-label labe-text">@Html.LabelRequiredFor(model => model.GoalActionWorkNote.ContactMethodID)</label>
                            <div class="col-sm-6">
                                @(Html.Kendo().DropDownListFor(model => model.GoalActionWorkNote.ContactMethodID)
                    .OptionLabel(Constants.UIConstants.DropDownListDefaulLabel)
                    .DataTextField("Text")
                    .DataValueField("Value")
                    .DataSource(source =>
                    {
                        source.Read(read =>
                        {
                            read.Action("LoadContactMethodAjax", "CaseWorkerNote");
                        });
                    })
                                )
                            </div>
                        </div>
                        <div class="form-group02">
                            <label class="col-sm-3 control-label labe-text">@Html.LabelRequiredFor(model => model.GoalActionWorkNote.NoteDate)</label>
                            <div class="col-sm-6">
                                @*@Html.EditorFor(model => model.NoteDate, new { id = "Case.CaseWorkerNote_NoteDate", name = "Case.CaseWorkerNote_NoteDate" })*@
                                @(Html.Kendo().DatePickerFor(model => model.GoalActionWorkNote.NoteDate)
                .HtmlAttributes(new { style = "width: 100%", title = "datepicker" })
                                )
                            </div>
                        </div>
                        <div class="form-group02">
                            <label class="col-sm-3 control-label labe-text">Time Spent</label>
                            <div class="col-sm-2">
                                @*@Html.EditorFor(m => m.CaseWorkerNote.TimeSpentHours, null, new { @class = "form-control" })*@
                                <span>Hours</span>
                                @(Html.Kendo().NumericTextBoxFor<int>(m => m.GoalActionWorkNote.TimeSpentHours)
                                            .Min(0)
                                            .Max(59)
                                            .HtmlAttributes(new { title = "Hours" })
                                )
                                @Html.ValidationMessageFor(m => m.GoalActionWorkNote.TimeSpentHours, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-sm-2">
                                @*@Html.EditorFor(m => m.CaseWorkerNote.TimeSpentMinutes, null, new { @class = "form-control" })*@
                                <span>Minutes</span>
                                @(Html.Kendo().NumericTextBoxFor<int>(m => m.GoalActionWorkNote.TimeSpentMinutes)
                                            .Min(0)
                                            .Max(59)
                                            .HtmlAttributes(new { title = "Minutes" })
                                )
                                @Html.ValidationMessageFor(m => m.GoalActionWorkNote.TimeSpentMinutes, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div id="add_candidate3">
            <button type="submit" class="btn btn-primary btnSaveAndRefresh" data-formid="frmEditorWorker" name="btnSave"><i class="fa fa-save"></i> Save </button>
            <a href="@Url.Action(Constants.Actions.Index, Constants.Controllers.CaseSummary, new { caseID = Model.CaseID})" class="btn btn-primary"><i class="fa fa-long-arrow-left"></i> Back to Case Summary</a>
        </div>
                            }
</div>


<script>
    $(document).ready(function () {
        var dropdownlist = $("#CaseMemberID").data("kendoDropDownList");

        if ($('#Family').prop('checked')) {
            dropdownlist.enable(true);
        }
        else {
            dropdownlist.enable(false);
        }

        $('input[type=radio][name=Family]').change(function () {
            if (this.value == 'Family') {
                dropdownlist.enable(false);
            }
            else {
                dropdownlist.enable(true);
            }
        });
        TrimDataLoad();
        $("#showAssessmentChart").click(function () {
            if ($('#divAssessmentChart').css('display') == 'none') {
                $('#showAssessmentChart').text('Hide Assessment Chart');
            }
            else {
                $('#showAssessmentChart').text('Show Assessment Chart');
            }
            $('#divAssessmentChart').toggle();
        });

    });
    function TrimDataLoad() {
        var showChar = 41;  // How many characters are shown by default
        var ellipsestext = "...";
        var moretext = "<b style='color: #ca4263;'>Show More</b>";
        var lesstext = "<b>Show Less</b>";


        $('.fulldescription').each(function () {
            var content = $(this).html();

            if (content.length > showChar) {

                var c = content.substr(0, showChar);
                var h = content.substr(showChar, content.length - showChar);

                var html = c + '<span class="moreellipses">' + ellipsestext + '&nbsp;</span><span class="morecontent"><span style="display:none;">' + h + '</span>&nbsp;&nbsp;<a href="" class="morelink">' + moretext + '</a></span>';

                $(this).html(html);
            }

        });

        $(".morelink").click(function () {
            if ($(this).hasClass("less")) {
                $(this).removeClass("less");
                $(this).html(moretext);
            } else {
                $(this).addClass("less");
                $(this).html(lesstext);
            }
            $(this).parent().prev().toggle();
            $(this).prev().toggle();
            return false;
        });
    }




</script>
