@model eCMS.DataLogic.Models.CaseMember
@using eCMS.BusinessLogic.Helpers
@using eCMS.DataLogic.Models
@using eCMS.Shared
@using EasySoft.Helper
@*@{
        string displaySelf = "display:none;";
        if(Model.RelationshipStatusID==16)
        {
            displaySelf = String.Empty;
        }
    }*@
<div id="dvAjaxAlertContainer">
    @Html.Partial(Constants.PartialViews.Alert)
</div>
@Html.HiddenFor(model => model.ID)
@*@Html.HiddenFor(model => model.CaseID)*@
@Html.HiddenFor(model => model.CreateDate)
@Html.HiddenFor(model => model.EnrollDate)
@Html.HiddenFor(model => model.CreatedByWorkerID)
@Html.HiddenFor(model => model.IsActive)
<div class="row">

    <div class="col-md-8">
        @Html.ValidationSummary(true)
        <div class="form-group02">
            <label class="col-sm-4 control-label labe-text">@Html.LabelRequiredFor(model => model.FirstName)</label>
            <div class="col-sm-4">
                @Html.EditorFor(model => model.FirstName)
            </div>
            <div class="col-sm-4">
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group02">
            <label class="col-sm-4 control-label labe-text">@Html.LabelRequiredFor(model => model.LastName)</label>
            <div class="col-sm-4">
                @Html.EditorFor(model => model.LastName)
            </div>
            <div class="col-sm-4">
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group02">
            <label class="col-sm-4 control-label labe-text">@Html.LabelFor(model => model.GenderID)</label>
            <div class="col-sm-4">
                @(Html.Kendo().DropDownListFor(model => model.GenderID)
                                .OptionLabel(Constants.UIConstants.DropDownListDefaulLabel)
                            .DataTextField("Text")
                            .DataValueField("Value")
                            .DataSource(source =>
                            {
                                source.Read(read =>
                                {
                                    read.Action("LoadGendersAjax", "CaseMember");
                                });
                            })
                            .Events(e => e.Open("onRequestEnd4"))
                )
            </div>
            <div class="col-sm-4">
                @Html.ValidationMessageFor(model => model.GenderID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group02">
            <label class="col-sm-4 control-label labe-text">@Html.LabelFor(model => model.DateOfBirth)</label>
            <div class="col-sm-4">
                @Html.EditorFor(model => model.DateOfBirth)

            </div>
            <div class="col-sm-4">
                @Html.ValidationMessageFor(model => model.DateOfBirth)
            </div>
        </div>
        <div class="form-group02">
            <label class="col-sm-4 control-label labe-text">@Html.LabelFor(model => model.MaritalStatusID)</label>
            <div class="col-sm-4">
                @(Html.Kendo().DropDownListFor(model => model.MaritalStatusID)
                                .OptionLabel(Constants.UIConstants.DropDownListDefaulLabel)
                            .DataTextField("Text")
                            .DataValueField("Value")
                            .DataSource(source =>
                            {
                                source.Read(read =>
                                {
                                    read.Action("LoadMaritalStatusAjax", "CaseMember");
                                });
                            })
                            .Events(e => e.Open("onRequestEnd5"))
                )

            </div>
            <div class="col-sm-4">
                @Html.ValidationMessageFor(model => model.MaritalStatusID)
            </div>

        </div>
        <div class="form-group02">
            <label class="col-sm-4 control-label labe-text">@Html.LabelFor(model => model.LanguageID)</label>
            <div class="col-sm-4" id="divLanguage">
                @(Html.Kendo().DropDownListFor(model => model.LanguageID)
                                    .OptionLabel(Constants.UIConstants.DropDownListDefaulLabel)
                                    .Events(e => e.Change("DropDownListOther_OnChange"))
                                .DataTextField("Text")
                                .DataValueField("Value")
                                .DataSource(source =>
                                {
                                    source.Read(read =>
                                    {
                                        read.Action("LoadLanguagesAjax", "CaseMember");
                                    });
                                })
                                .Events(e => e.Open("onRequestEnd2"))
                )
            </div>
            <div class="col-sm-4">
                @Html.ValidationMessageFor(model => model.LanguageID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group02">
            <label class="col-sm-4 control-label labe-text">@Html.LabelFor(model => model.RelationshipStatusID)</label>
            <div class="col-sm-4" id="divRelationshipStatus">
                @(Html.Kendo().DropDownListFor(model => model.RelationshipStatusID)
                                    .OptionLabel(Constants.UIConstants.DropDownListDefaulLabel)
                                    .Events(e => e.Change("DropDownListOther_OnChange"))
                                .DataTextField("Text")
                                .DataValueField("Value")
                                .DataSource(source =>
                                {
                                    source.Read(read =>
                                    {
                                        read.Action("LoadRelationshipStatusAjax", "CaseMember");
                                    });
                                })
                                .Events(e => e.Open("onRequestEnd1"))
                )
            </div>
            <div class="col-sm-4">
                @Html.ValidationMessageFor(model => model.RelationshipStatusID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group02">
            <label class="col-sm-4 control-label labe-text">@Html.LabelFor(model => model.EthnicityID)</label>
            <div class="col-sm-4" id="divEthnicity">
                @*@(Html.Kendo().MultiSelectFor(model => model.CaseEthinicity)
                            // .OptionLabel(Constants.UIConstants.DropDownListDefaulLabel)
                                        .Events(e => e.Change("DropDownListEthnicity_OnChange"))
                                         .MaxSelectedItems(5)
                                    .DataTextField("Text")
                                    .DataValueField("Value")
                                    .DataSource(source =>
                                    {
                                        source.Read(read =>
                                        {
                                            read.Action("LoadEthnicityAjax", "CaseMember");
                                        });
                                    })
                                    .Events(e => e.Open("onRequestEnd5"))
                    )*@
                @(Html.Kendo().DropDownListFor(model => model.EthnicityID)
                                    .OptionLabel(Constants.UIConstants.DropDownListDefaulLabel)
                                    .Events(e => e.Change("DropDownListOther_OnChange"))
                                .DataTextField("Text")
                                .DataValueField("Value")
                                .DataSource(source =>
                                {
                                    source.Read(read =>
                                    {
                                        read.Action("LoadEthnicityAjax", "CaseMember");
                                    });
                                })
                                .Events(e => e.Open("onRequestEnd7"))
                )
               
            </div>
            <div class="col-sm-4">
                @Html.ValidationMessageFor(model => model.EthnicityID)
            </div>
        </div>
    </div>
</div>
@*@if (Model.ID > 0)*@
@{
    string name = Html.NameFor(m => m.CaseWorkerNote).ToString();
    string prefix = Html.ViewContext.ViewData.TemplateInfo.GetFullHtmlFieldName(name);
    ViewDataDictionary viewData = new ViewDataDictionary(Html.ViewData)
    {
        TemplateInfo = new TemplateInfo { HtmlFieldPrefix = prefix }
    };

    @Html.Partial("WorkNote", Model.CaseWorkerNote, viewData)
}
<div class="row">
    <div class="col-md-5">
        <div class="form-group02">
            <div class="col-sm-5">
                <button type="submit" class="btn btn-primary" name="btnSave"><i class="fa fa-save"></i> Save Individual</button>
            </div>
        </div>
    </div>
    <div class="col-md-7">
        <div class="form-group02">
            <div class="col-sm-5 col-sm-offset-7" style="text-align: right;">
                @*<button class="btn btn-primary" id="btnSave" name="btnSaveCaseMember"><i class="fa fa-save"></i> Save & Continue <i class="fa fa-arrow-left"></i></button>*@
                <a href="@Url.Action(Constants.Actions.Index, Constants.Controllers.CaseSummary, new { caseID = Model.CaseID})" class="btn btn-primary"><i class="fa fa-long-arrow-left"></i> Back to Case Summary</a>
            </div>
        </div>
    </div>
</div>
